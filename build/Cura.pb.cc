// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Cura.proto

#include "Cura.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Cura_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Cura_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MaterialEstimates;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Cura_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PathSegment;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Cura_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Polygon;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Cura_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Setting;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Cura_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SettingExtruder;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Cura_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Extruder;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Cura_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Object;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Cura_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SettingList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Cura_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ObjectList;
}  // namespace protobuf_Cura_2eproto
namespace cura {
namespace proto {
class ObjectListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectList>
      _instance;
} _ObjectList_default_instance_;
class SliceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Slice>
      _instance;
} _Slice_default_instance_;
class ExtruderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Extruder>
      _instance;
} _Extruder_default_instance_;
class ObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Object>
      _instance;
} _Object_default_instance_;
class ProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Progress>
      _instance;
} _Progress_default_instance_;
class LayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Layer>
      _instance;
} _Layer_default_instance_;
class PolygonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Polygon>
      _instance;
} _Polygon_default_instance_;
class LayerOptimizedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LayerOptimized>
      _instance;
} _LayerOptimized_default_instance_;
class PathSegmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PathSegment>
      _instance;
} _PathSegment_default_instance_;
class GCodeLayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GCodeLayer>
      _instance;
} _GCodeLayer_default_instance_;
class PrintTimeMaterialEstimatesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrintTimeMaterialEstimates>
      _instance;
} _PrintTimeMaterialEstimates_default_instance_;
class MaterialEstimatesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MaterialEstimates>
      _instance;
} _MaterialEstimates_default_instance_;
class SettingListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SettingList>
      _instance;
} _SettingList_default_instance_;
class SettingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Setting>
      _instance;
} _Setting_default_instance_;
class SettingExtruderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SettingExtruder>
      _instance;
} _SettingExtruder_default_instance_;
class GCodePrefixDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GCodePrefix>
      _instance;
} _GCodePrefix_default_instance_;
class SlicingFinishedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SlicingFinished>
      _instance;
} _SlicingFinished_default_instance_;
}  // namespace proto
}  // namespace cura
namespace protobuf_Cura_2eproto {
static void InitDefaultsObjectList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cura::proto::_ObjectList_default_instance_;
    new (ptr) ::cura::proto::ObjectList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::ObjectList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ObjectList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsObjectList}, {
      &protobuf_Cura_2eproto::scc_info_Object.base,
      &protobuf_Cura_2eproto::scc_info_Setting.base,}};

static void InitDefaultsSlice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cura::proto::_Slice_default_instance_;
    new (ptr) ::cura::proto::Slice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::Slice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Slice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsSlice}, {
      &protobuf_Cura_2eproto::scc_info_ObjectList.base,
      &protobuf_Cura_2eproto::scc_info_SettingList.base,
      &protobuf_Cura_2eproto::scc_info_Extruder.base,
      &protobuf_Cura_2eproto::scc_info_SettingExtruder.base,}};

static void InitDefaultsExtruder() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cura::proto::_Extruder_default_instance_;
    new (ptr) ::cura::proto::Extruder();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::Extruder::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Extruder =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExtruder}, {
      &protobuf_Cura_2eproto::scc_info_SettingList.base,}};

static void InitDefaultsObject() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cura::proto::_Object_default_instance_;
    new (ptr) ::cura::proto::Object();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::Object::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Object =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsObject}, {
      &protobuf_Cura_2eproto::scc_info_Setting.base,}};

static void InitDefaultsProgress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cura::proto::_Progress_default_instance_;
    new (ptr) ::cura::proto::Progress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::Progress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Progress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProgress}, {}};

static void InitDefaultsLayer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cura::proto::_Layer_default_instance_;
    new (ptr) ::cura::proto::Layer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::Layer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Layer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLayer}, {
      &protobuf_Cura_2eproto::scc_info_Polygon.base,}};

static void InitDefaultsPolygon() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cura::proto::_Polygon_default_instance_;
    new (ptr) ::cura::proto::Polygon();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::Polygon::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Polygon =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPolygon}, {}};

static void InitDefaultsLayerOptimized() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cura::proto::_LayerOptimized_default_instance_;
    new (ptr) ::cura::proto::LayerOptimized();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::LayerOptimized::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LayerOptimized =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLayerOptimized}, {
      &protobuf_Cura_2eproto::scc_info_PathSegment.base,}};

static void InitDefaultsPathSegment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cura::proto::_PathSegment_default_instance_;
    new (ptr) ::cura::proto::PathSegment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::PathSegment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PathSegment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPathSegment}, {}};

static void InitDefaultsGCodeLayer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cura::proto::_GCodeLayer_default_instance_;
    new (ptr) ::cura::proto::GCodeLayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::GCodeLayer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GCodeLayer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGCodeLayer}, {}};

static void InitDefaultsPrintTimeMaterialEstimates() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cura::proto::_PrintTimeMaterialEstimates_default_instance_;
    new (ptr) ::cura::proto::PrintTimeMaterialEstimates();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::PrintTimeMaterialEstimates::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PrintTimeMaterialEstimates =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPrintTimeMaterialEstimates}, {
      &protobuf_Cura_2eproto::scc_info_MaterialEstimates.base,}};

static void InitDefaultsMaterialEstimates() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cura::proto::_MaterialEstimates_default_instance_;
    new (ptr) ::cura::proto::MaterialEstimates();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::MaterialEstimates::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MaterialEstimates =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMaterialEstimates}, {}};

static void InitDefaultsSettingList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cura::proto::_SettingList_default_instance_;
    new (ptr) ::cura::proto::SettingList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::SettingList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SettingList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSettingList}, {
      &protobuf_Cura_2eproto::scc_info_Setting.base,}};

static void InitDefaultsSetting() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cura::proto::_Setting_default_instance_;
    new (ptr) ::cura::proto::Setting();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::Setting::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Setting =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetting}, {}};

static void InitDefaultsSettingExtruder() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cura::proto::_SettingExtruder_default_instance_;
    new (ptr) ::cura::proto::SettingExtruder();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::SettingExtruder::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SettingExtruder =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSettingExtruder}, {}};

static void InitDefaultsGCodePrefix() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cura::proto::_GCodePrefix_default_instance_;
    new (ptr) ::cura::proto::GCodePrefix();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::GCodePrefix::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GCodePrefix =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGCodePrefix}, {}};

static void InitDefaultsSlicingFinished() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cura::proto::_SlicingFinished_default_instance_;
    new (ptr) ::cura::proto::SlicingFinished();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cura::proto::SlicingFinished::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SlicingFinished =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSlicingFinished}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Slice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Extruder.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Object.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Progress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Layer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Polygon.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LayerOptimized.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PathSegment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GCodeLayer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrintTimeMaterialEstimates.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MaterialEstimates.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SettingList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Setting.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SettingExtruder.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GCodePrefix.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SlicingFinished.base);
}

::google::protobuf::Metadata file_level_metadata[17];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::ObjectList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::ObjectList, objects_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::ObjectList, settings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Slice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Slice, object_lists_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Slice, global_settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Slice, extruders_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Slice, limit_to_extruder_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Extruder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Extruder, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Extruder, settings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Object, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Object, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Object, vertices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Object, normals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Object, indices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Object, settings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Progress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Progress, amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Layer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Layer, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Layer, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Layer, thickness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Layer, polygons_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Polygon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Polygon, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Polygon, points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Polygon, line_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Polygon, line_thickness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Polygon, line_feedrate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::LayerOptimized, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::LayerOptimized, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::LayerOptimized, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::LayerOptimized, thickness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::LayerOptimized, path_segment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PathSegment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PathSegment, extruder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PathSegment, point_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PathSegment, points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PathSegment, line_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PathSegment, line_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PathSegment, line_thickness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PathSegment, line_feedrate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::GCodeLayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::GCodeLayer, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PrintTimeMaterialEstimates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PrintTimeMaterialEstimates, time_none_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PrintTimeMaterialEstimates, time_inset_0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PrintTimeMaterialEstimates, time_inset_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PrintTimeMaterialEstimates, time_skin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PrintTimeMaterialEstimates, time_support_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PrintTimeMaterialEstimates, time_skirt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PrintTimeMaterialEstimates, time_infill_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PrintTimeMaterialEstimates, time_support_infill_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PrintTimeMaterialEstimates, time_travel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PrintTimeMaterialEstimates, time_retract_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PrintTimeMaterialEstimates, time_support_interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::PrintTimeMaterialEstimates, materialestimates_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::MaterialEstimates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::MaterialEstimates, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::MaterialEstimates, material_amount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::SettingList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::SettingList, settings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Setting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Setting, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::Setting, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::SettingExtruder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::SettingExtruder, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::SettingExtruder, extruder_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::GCodePrefix, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::GCodePrefix, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cura::proto::SlicingFinished, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::cura::proto::ObjectList)},
  { 7, -1, sizeof(::cura::proto::Slice)},
  { 16, -1, sizeof(::cura::proto::Extruder)},
  { 23, -1, sizeof(::cura::proto::Object)},
  { 33, -1, sizeof(::cura::proto::Progress)},
  { 39, -1, sizeof(::cura::proto::Layer)},
  { 48, -1, sizeof(::cura::proto::Polygon)},
  { 58, -1, sizeof(::cura::proto::LayerOptimized)},
  { 67, -1, sizeof(::cura::proto::PathSegment)},
  { 79, -1, sizeof(::cura::proto::GCodeLayer)},
  { 85, -1, sizeof(::cura::proto::PrintTimeMaterialEstimates)},
  { 102, -1, sizeof(::cura::proto::MaterialEstimates)},
  { 109, -1, sizeof(::cura::proto::SettingList)},
  { 115, -1, sizeof(::cura::proto::Setting)},
  { 122, -1, sizeof(::cura::proto::SettingExtruder)},
  { 129, -1, sizeof(::cura::proto::GCodePrefix)},
  { 135, -1, sizeof(::cura::proto::SlicingFinished)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_ObjectList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_Slice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_Extruder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_Object_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_Progress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_Layer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_Polygon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_LayerOptimized_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_PathSegment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_GCodeLayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_PrintTimeMaterialEstimates_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_MaterialEstimates_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_SettingList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_Setting_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_SettingExtruder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_GCodePrefix_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cura::proto::_SlicingFinished_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Cura.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 17);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nCura.proto\022\ncura.proto\"X\n\nObjectList\022#"
      "\n\007objects\030\001 \003(\0132\022.cura.proto.Object\022%\n\010s"
      "ettings\030\002 \003(\0132\023.cura.proto.Setting\"\310\001\n\005S"
      "lice\022,\n\014object_lists\030\001 \003(\0132\026.cura.proto."
      "ObjectList\0220\n\017global_settings\030\002 \001(\0132\027.cu"
      "ra.proto.SettingList\022\'\n\textruders\030\003 \003(\0132"
      "\024.cura.proto.Extruder\0226\n\021limit_to_extrud"
      "er\030\004 \003(\0132\033.cura.proto.SettingExtruder\"A\n"
      "\010Extruder\022\n\n\002id\030\001 \001(\005\022)\n\010settings\030\002 \001(\0132"
      "\027.cura.proto.SettingList\"o\n\006Object\022\n\n\002id"
      "\030\001 \001(\003\022\020\n\010vertices\030\002 \001(\014\022\017\n\007normals\030\003 \001("
      "\014\022\017\n\007indices\030\004 \001(\014\022%\n\010settings\030\005 \003(\0132\023.c"
      "ura.proto.Setting\"\032\n\010Progress\022\016\n\006amount\030"
      "\001 \001(\002\"]\n\005Layer\022\n\n\002id\030\001 \001(\005\022\016\n\006height\030\002 \001"
      "(\002\022\021\n\tthickness\030\003 \001(\002\022%\n\010polygons\030\004 \003(\0132"
      "\023.cura.proto.Polygon\"\327\002\n\007Polygon\022&\n\004type"
      "\030\001 \001(\0162\030.cura.proto.Polygon.Type\022\016\n\006poin"
      "ts\030\002 \001(\014\022\022\n\nline_width\030\003 \001(\002\022\026\n\016line_thi"
      "ckness\030\004 \001(\002\022\025\n\rline_feedrate\030\005 \001(\002\"\320\001\n\004"
      "Type\022\014\n\010NoneType\020\000\022\016\n\nInset0Type\020\001\022\016\n\nIn"
      "setXType\020\002\022\014\n\010SkinType\020\003\022\017\n\013SupportType\020"
      "\004\022\r\n\tSkirtType\020\005\022\016\n\nInfillType\020\006\022\025\n\021Supp"
      "ortInfillType\020\007\022\023\n\017MoveCombingType\020\010\022\026\n\022"
      "MoveRetractionType\020\t\022\030\n\024SupportInterface"
      "Type\020\n\"n\n\016LayerOptimized\022\n\n\002id\030\001 \001(\005\022\016\n\006"
      "height\030\002 \001(\002\022\021\n\tthickness\030\003 \001(\002\022-\n\014path_"
      "segment\030\004 \003(\0132\027.cura.proto.PathSegment\"\343"
      "\001\n\013PathSegment\022\020\n\010extruder\030\001 \001(\005\0225\n\npoin"
      "t_type\030\002 \001(\0162!.cura.proto.PathSegment.Po"
      "intType\022\016\n\006points\030\003 \001(\014\022\021\n\tline_type\030\004 \001"
      "(\014\022\022\n\nline_width\030\005 \001(\014\022\026\n\016line_thickness"
      "\030\006 \001(\014\022\025\n\rline_feedrate\030\007 \001(\014\"%\n\tPointTy"
      "pe\022\013\n\007Point2D\020\000\022\013\n\007Point3D\020\001\"\032\n\nGCodeLay"
      "er\022\014\n\004data\030\002 \001(\014\"\317\002\n\032PrintTimeMaterialEs"
      "timates\022\021\n\ttime_none\030\001 \001(\002\022\024\n\014time_inset"
      "_0\030\002 \001(\002\022\024\n\014time_inset_x\030\003 \001(\002\022\021\n\ttime_s"
      "kin\030\004 \001(\002\022\024\n\014time_support\030\005 \001(\002\022\022\n\ntime_"
      "skirt\030\006 \001(\002\022\023\n\013time_infill\030\007 \001(\002\022\033\n\023time"
      "_support_infill\030\010 \001(\002\022\023\n\013time_travel\030\t \001"
      "(\002\022\024\n\014time_retract\030\n \001(\002\022\036\n\026time_support"
      "_interface\030\013 \001(\002\0228\n\021materialEstimates\030\014 "
      "\003(\0132\035.cura.proto.MaterialEstimates\"8\n\021Ma"
      "terialEstimates\022\n\n\002id\030\001 \001(\003\022\027\n\017material_"
      "amount\030\002 \001(\002\"4\n\013SettingList\022%\n\010settings\030"
      "\001 \003(\0132\023.cura.proto.Setting\"&\n\007Setting\022\014\n"
      "\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\014\"1\n\017SettingExt"
      "ruder\022\014\n\004name\030\001 \001(\t\022\020\n\010extruder\030\002 \001(\005\"\033\n"
      "\013GCodePrefix\022\014\n\004data\030\002 \001(\014\"\021\n\017SlicingFin"
      "ishedb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1933);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Cura.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Cura_2eproto
namespace cura {
namespace proto {
const ::google::protobuf::EnumDescriptor* Polygon_Type_descriptor() {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Cura_2eproto::file_level_enum_descriptors[0];
}
bool Polygon_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Polygon_Type Polygon::NoneType;
const Polygon_Type Polygon::Inset0Type;
const Polygon_Type Polygon::InsetXType;
const Polygon_Type Polygon::SkinType;
const Polygon_Type Polygon::SupportType;
const Polygon_Type Polygon::SkirtType;
const Polygon_Type Polygon::InfillType;
const Polygon_Type Polygon::SupportInfillType;
const Polygon_Type Polygon::MoveCombingType;
const Polygon_Type Polygon::MoveRetractionType;
const Polygon_Type Polygon::SupportInterfaceType;
const Polygon_Type Polygon::Type_MIN;
const Polygon_Type Polygon::Type_MAX;
const int Polygon::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PathSegment_PointType_descriptor() {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Cura_2eproto::file_level_enum_descriptors[1];
}
bool PathSegment_PointType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PathSegment_PointType PathSegment::Point2D;
const PathSegment_PointType PathSegment::Point3D;
const PathSegment_PointType PathSegment::PointType_MIN;
const PathSegment_PointType PathSegment::PointType_MAX;
const int PathSegment::PointType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ObjectList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectList::kObjectsFieldNumber;
const int ObjectList::kSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectList::ObjectList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Cura_2eproto::scc_info_ObjectList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.ObjectList)
}
ObjectList::ObjectList(const ObjectList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      objects_(from.objects_),
      settings_(from.settings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cura.proto.ObjectList)
}

void ObjectList::SharedCtor() {
}

ObjectList::~ObjectList() {
  // @@protoc_insertion_point(destructor:cura.proto.ObjectList)
  SharedDtor();
}

void ObjectList::SharedDtor() {
}

void ObjectList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectList::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectList& ObjectList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Cura_2eproto::scc_info_ObjectList.base);
  return *internal_default_instance();
}


void ObjectList::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.ObjectList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objects_.Clear();
  settings_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.ObjectList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .cura.proto.Object objects = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_objects()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .cura.proto.Setting settings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.ObjectList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.ObjectList)
  return false;
#undef DO_
}

void ObjectList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.ObjectList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cura.proto.Object objects = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objects_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->objects(static_cast<int>(i)),
      output);
  }

  // repeated .cura.proto.Setting settings = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->settings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->settings(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.ObjectList)
}

::google::protobuf::uint8* ObjectList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.ObjectList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cura.proto.Object objects = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objects_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->objects(static_cast<int>(i)), deterministic, target);
  }

  // repeated .cura.proto.Setting settings = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->settings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->settings(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.ObjectList)
  return target;
}

size_t ObjectList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.ObjectList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .cura.proto.Object objects = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->objects_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->objects(static_cast<int>(i)));
    }
  }

  // repeated .cura.proto.Setting settings = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->settings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->settings(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.ObjectList)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.ObjectList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.ObjectList)
    MergeFrom(*source);
  }
}

void ObjectList::MergeFrom(const ObjectList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.ObjectList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objects_.MergeFrom(from.objects_);
  settings_.MergeFrom(from.settings_);
}

void ObjectList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.ObjectList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectList::CopyFrom(const ObjectList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.ObjectList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectList::IsInitialized() const {
  return true;
}

void ObjectList::Swap(ObjectList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectList::InternalSwap(ObjectList* other) {
  using std::swap;
  CastToBase(&objects_)->InternalSwap(CastToBase(&other->objects_));
  CastToBase(&settings_)->InternalSwap(CastToBase(&other->settings_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectList::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Slice::InitAsDefaultInstance() {
  ::cura::proto::_Slice_default_instance_._instance.get_mutable()->global_settings_ = const_cast< ::cura::proto::SettingList*>(
      ::cura::proto::SettingList::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Slice::kObjectListsFieldNumber;
const int Slice::kGlobalSettingsFieldNumber;
const int Slice::kExtrudersFieldNumber;
const int Slice::kLimitToExtruderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Slice::Slice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Cura_2eproto::scc_info_Slice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.Slice)
}
Slice::Slice(const Slice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      object_lists_(from.object_lists_),
      extruders_(from.extruders_),
      limit_to_extruder_(from.limit_to_extruder_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_global_settings()) {
    global_settings_ = new ::cura::proto::SettingList(*from.global_settings_);
  } else {
    global_settings_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:cura.proto.Slice)
}

void Slice::SharedCtor() {
  global_settings_ = NULL;
}

Slice::~Slice() {
  // @@protoc_insertion_point(destructor:cura.proto.Slice)
  SharedDtor();
}

void Slice::SharedDtor() {
  if (this != internal_default_instance()) delete global_settings_;
}

void Slice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Slice::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Slice& Slice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Cura_2eproto::scc_info_Slice.base);
  return *internal_default_instance();
}


void Slice::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.Slice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_lists_.Clear();
  extruders_.Clear();
  limit_to_extruder_.Clear();
  if (GetArenaNoVirtual() == NULL && global_settings_ != NULL) {
    delete global_settings_;
  }
  global_settings_ = NULL;
  _internal_metadata_.Clear();
}

bool Slice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.Slice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .cura.proto.ObjectList object_lists = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_object_lists()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .cura.proto.SettingList global_settings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_global_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .cura.proto.Extruder extruders = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extruders()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .cura.proto.SettingExtruder limit_to_extruder = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_limit_to_extruder()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.Slice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.Slice)
  return false;
#undef DO_
}

void Slice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.Slice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cura.proto.ObjectList object_lists = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->object_lists_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->object_lists(static_cast<int>(i)),
      output);
  }

  // .cura.proto.SettingList global_settings = 2;
  if (this->has_global_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_global_settings(), output);
  }

  // repeated .cura.proto.Extruder extruders = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extruders_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extruders(static_cast<int>(i)),
      output);
  }

  // repeated .cura.proto.SettingExtruder limit_to_extruder = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->limit_to_extruder_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->limit_to_extruder(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.Slice)
}

::google::protobuf::uint8* Slice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.Slice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cura.proto.ObjectList object_lists = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->object_lists_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->object_lists(static_cast<int>(i)), deterministic, target);
  }

  // .cura.proto.SettingList global_settings = 2;
  if (this->has_global_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_global_settings(), deterministic, target);
  }

  // repeated .cura.proto.Extruder extruders = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extruders_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extruders(static_cast<int>(i)), deterministic, target);
  }

  // repeated .cura.proto.SettingExtruder limit_to_extruder = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->limit_to_extruder_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->limit_to_extruder(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.Slice)
  return target;
}

size_t Slice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.Slice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .cura.proto.ObjectList object_lists = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->object_lists_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->object_lists(static_cast<int>(i)));
    }
  }

  // repeated .cura.proto.Extruder extruders = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extruders_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extruders(static_cast<int>(i)));
    }
  }

  // repeated .cura.proto.SettingExtruder limit_to_extruder = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->limit_to_extruder_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->limit_to_extruder(static_cast<int>(i)));
    }
  }

  // .cura.proto.SettingList global_settings = 2;
  if (this->has_global_settings()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *global_settings_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Slice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.Slice)
  GOOGLE_DCHECK_NE(&from, this);
  const Slice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Slice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.Slice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.Slice)
    MergeFrom(*source);
  }
}

void Slice::MergeFrom(const Slice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.Slice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  object_lists_.MergeFrom(from.object_lists_);
  extruders_.MergeFrom(from.extruders_);
  limit_to_extruder_.MergeFrom(from.limit_to_extruder_);
  if (from.has_global_settings()) {
    mutable_global_settings()->::cura::proto::SettingList::MergeFrom(from.global_settings());
  }
}

void Slice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.Slice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Slice::CopyFrom(const Slice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.Slice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Slice::IsInitialized() const {
  return true;
}

void Slice::Swap(Slice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Slice::InternalSwap(Slice* other) {
  using std::swap;
  CastToBase(&object_lists_)->InternalSwap(CastToBase(&other->object_lists_));
  CastToBase(&extruders_)->InternalSwap(CastToBase(&other->extruders_));
  CastToBase(&limit_to_extruder_)->InternalSwap(CastToBase(&other->limit_to_extruder_));
  swap(global_settings_, other->global_settings_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Slice::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Extruder::InitAsDefaultInstance() {
  ::cura::proto::_Extruder_default_instance_._instance.get_mutable()->settings_ = const_cast< ::cura::proto::SettingList*>(
      ::cura::proto::SettingList::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Extruder::kIdFieldNumber;
const int Extruder::kSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Extruder::Extruder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Cura_2eproto::scc_info_Extruder.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.Extruder)
}
Extruder::Extruder(const Extruder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_settings()) {
    settings_ = new ::cura::proto::SettingList(*from.settings_);
  } else {
    settings_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:cura.proto.Extruder)
}

void Extruder::SharedCtor() {
  ::memset(&settings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&settings_)) + sizeof(id_));
}

Extruder::~Extruder() {
  // @@protoc_insertion_point(destructor:cura.proto.Extruder)
  SharedDtor();
}

void Extruder::SharedDtor() {
  if (this != internal_default_instance()) delete settings_;
}

void Extruder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Extruder::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Extruder& Extruder::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Cura_2eproto::scc_info_Extruder.base);
  return *internal_default_instance();
}


void Extruder::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.Extruder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && settings_ != NULL) {
    delete settings_;
  }
  settings_ = NULL;
  id_ = 0;
  _internal_metadata_.Clear();
}

bool Extruder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.Extruder)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .cura.proto.SettingList settings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.Extruder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.Extruder)
  return false;
#undef DO_
}

void Extruder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.Extruder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // .cura.proto.SettingList settings = 2;
  if (this->has_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_settings(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.Extruder)
}

::google::protobuf::uint8* Extruder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.Extruder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // .cura.proto.SettingList settings = 2;
  if (this->has_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_settings(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.Extruder)
  return target;
}

size_t Extruder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.Extruder)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .cura.proto.SettingList settings = 2;
  if (this->has_settings()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *settings_);
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Extruder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.Extruder)
  GOOGLE_DCHECK_NE(&from, this);
  const Extruder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Extruder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.Extruder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.Extruder)
    MergeFrom(*source);
  }
}

void Extruder::MergeFrom(const Extruder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.Extruder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_settings()) {
    mutable_settings()->::cura::proto::SettingList::MergeFrom(from.settings());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Extruder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.Extruder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Extruder::CopyFrom(const Extruder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.Extruder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Extruder::IsInitialized() const {
  return true;
}

void Extruder::Swap(Extruder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Extruder::InternalSwap(Extruder* other) {
  using std::swap;
  swap(settings_, other->settings_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Extruder::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Object::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Object::kIdFieldNumber;
const int Object::kVerticesFieldNumber;
const int Object::kNormalsFieldNumber;
const int Object::kIndicesFieldNumber;
const int Object::kSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Object::Object()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Cura_2eproto::scc_info_Object.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.Object)
}
Object::Object(const Object& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      settings_(from.settings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vertices_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vertices().size() > 0) {
    vertices_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vertices_);
  }
  normals_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.normals().size() > 0) {
    normals_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.normals_);
  }
  indices_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.indices().size() > 0) {
    indices_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.indices_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:cura.proto.Object)
}

void Object::SharedCtor() {
  vertices_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  normals_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  indices_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
}

Object::~Object() {
  // @@protoc_insertion_point(destructor:cura.proto.Object)
  SharedDtor();
}

void Object::SharedDtor() {
  vertices_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  normals_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  indices_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Object::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Object::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Object& Object::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Cura_2eproto::scc_info_Object.base);
  return *internal_default_instance();
}


void Object::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.Object)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  settings_.Clear();
  vertices_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  normals_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  indices_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Object::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.Object)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes vertices = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_vertices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes normals = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_normals()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes indices = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_indices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .cura.proto.Setting settings = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.Object)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.Object)
  return false;
#undef DO_
}

void Object::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.Object)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // bytes vertices = 2;
  if (this->vertices().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->vertices(), output);
  }

  // bytes normals = 3;
  if (this->normals().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->normals(), output);
  }

  // bytes indices = 4;
  if (this->indices().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->indices(), output);
  }

  // repeated .cura.proto.Setting settings = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->settings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->settings(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.Object)
}

::google::protobuf::uint8* Object::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.Object)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // bytes vertices = 2;
  if (this->vertices().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->vertices(), target);
  }

  // bytes normals = 3;
  if (this->normals().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->normals(), target);
  }

  // bytes indices = 4;
  if (this->indices().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->indices(), target);
  }

  // repeated .cura.proto.Setting settings = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->settings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->settings(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.Object)
  return target;
}

size_t Object::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.Object)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .cura.proto.Setting settings = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->settings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->settings(static_cast<int>(i)));
    }
  }

  // bytes vertices = 2;
  if (this->vertices().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->vertices());
  }

  // bytes normals = 3;
  if (this->normals().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->normals());
  }

  // bytes indices = 4;
  if (this->indices().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->indices());
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Object::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.Object)
  GOOGLE_DCHECK_NE(&from, this);
  const Object* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Object>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.Object)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.Object)
    MergeFrom(*source);
  }
}

void Object::MergeFrom(const Object& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.Object)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  settings_.MergeFrom(from.settings_);
  if (from.vertices().size() > 0) {

    vertices_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vertices_);
  }
  if (from.normals().size() > 0) {

    normals_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.normals_);
  }
  if (from.indices().size() > 0) {

    indices_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.indices_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Object::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Object::CopyFrom(const Object& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Object::IsInitialized() const {
  return true;
}

void Object::Swap(Object* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Object::InternalSwap(Object* other) {
  using std::swap;
  CastToBase(&settings_)->InternalSwap(CastToBase(&other->settings_));
  vertices_.Swap(&other->vertices_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  normals_.Swap(&other->normals_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  indices_.Swap(&other->indices_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Object::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Progress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Progress::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Progress::Progress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Cura_2eproto::scc_info_Progress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.Progress)
}
Progress::Progress(const Progress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:cura.proto.Progress)
}

void Progress::SharedCtor() {
  amount_ = 0;
}

Progress::~Progress() {
  // @@protoc_insertion_point(destructor:cura.proto.Progress)
  SharedDtor();
}

void Progress::SharedDtor() {
}

void Progress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Progress::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Progress& Progress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Cura_2eproto::scc_info_Progress.base);
  return *internal_default_instance();
}


void Progress::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.Progress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  amount_ = 0;
  _internal_metadata_.Clear();
}

bool Progress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.Progress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float amount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.Progress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.Progress)
  return false;
#undef DO_
}

void Progress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.Progress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float amount = 1;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.Progress)
}

::google::protobuf::uint8* Progress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.Progress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float amount = 1;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.Progress)
  return target;
}

size_t Progress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.Progress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float amount = 1;
  if (this->amount() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Progress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.Progress)
  GOOGLE_DCHECK_NE(&from, this);
  const Progress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Progress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.Progress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.Progress)
    MergeFrom(*source);
  }
}

void Progress::MergeFrom(const Progress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.Progress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.amount() != 0) {
    set_amount(from.amount());
  }
}

void Progress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.Progress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Progress::CopyFrom(const Progress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.Progress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Progress::IsInitialized() const {
  return true;
}

void Progress::Swap(Progress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Progress::InternalSwap(Progress* other) {
  using std::swap;
  swap(amount_, other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Progress::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Layer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Layer::kIdFieldNumber;
const int Layer::kHeightFieldNumber;
const int Layer::kThicknessFieldNumber;
const int Layer::kPolygonsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Layer::Layer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Cura_2eproto::scc_info_Layer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.Layer)
}
Layer::Layer(const Layer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      polygons_(from.polygons_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&thickness_) -
    reinterpret_cast<char*>(&id_)) + sizeof(thickness_));
  // @@protoc_insertion_point(copy_constructor:cura.proto.Layer)
}

void Layer::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&thickness_) -
      reinterpret_cast<char*>(&id_)) + sizeof(thickness_));
}

Layer::~Layer() {
  // @@protoc_insertion_point(destructor:cura.proto.Layer)
  SharedDtor();
}

void Layer::SharedDtor() {
}

void Layer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Layer::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Layer& Layer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Cura_2eproto::scc_info_Layer.base);
  return *internal_default_instance();
}


void Layer::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.Layer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  polygons_.Clear();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&thickness_) -
      reinterpret_cast<char*>(&id_)) + sizeof(thickness_));
  _internal_metadata_.Clear();
}

bool Layer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.Layer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float thickness = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &thickness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .cura.proto.Polygon polygons = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_polygons()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.Layer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.Layer)
  return false;
#undef DO_
}

void Layer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.Layer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // float height = 2;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->height(), output);
  }

  // float thickness = 3;
  if (this->thickness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->thickness(), output);
  }

  // repeated .cura.proto.Polygon polygons = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygons_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->polygons(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.Layer)
}

::google::protobuf::uint8* Layer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.Layer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // float height = 2;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->height(), target);
  }

  // float thickness = 3;
  if (this->thickness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->thickness(), target);
  }

  // repeated .cura.proto.Polygon polygons = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygons_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->polygons(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.Layer)
  return target;
}

size_t Layer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.Layer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .cura.proto.Polygon polygons = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->polygons_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->polygons(static_cast<int>(i)));
    }
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // float height = 2;
  if (this->height() != 0) {
    total_size += 1 + 4;
  }

  // float thickness = 3;
  if (this->thickness() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Layer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.Layer)
  GOOGLE_DCHECK_NE(&from, this);
  const Layer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Layer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.Layer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.Layer)
    MergeFrom(*source);
  }
}

void Layer::MergeFrom(const Layer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.Layer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  polygons_.MergeFrom(from.polygons_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.thickness() != 0) {
    set_thickness(from.thickness());
  }
}

void Layer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.Layer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Layer::CopyFrom(const Layer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.Layer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Layer::IsInitialized() const {
  return true;
}

void Layer::Swap(Layer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Layer::InternalSwap(Layer* other) {
  using std::swap;
  CastToBase(&polygons_)->InternalSwap(CastToBase(&other->polygons_));
  swap(id_, other->id_);
  swap(height_, other->height_);
  swap(thickness_, other->thickness_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Layer::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Polygon::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Polygon::kTypeFieldNumber;
const int Polygon::kPointsFieldNumber;
const int Polygon::kLineWidthFieldNumber;
const int Polygon::kLineThicknessFieldNumber;
const int Polygon::kLineFeedrateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Polygon::Polygon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Cura_2eproto::scc_info_Polygon.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.Polygon)
}
Polygon::Polygon(const Polygon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  points_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.points().size() > 0) {
    points_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.points_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&line_feedrate_) -
    reinterpret_cast<char*>(&type_)) + sizeof(line_feedrate_));
  // @@protoc_insertion_point(copy_constructor:cura.proto.Polygon)
}

void Polygon::SharedCtor() {
  points_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&line_feedrate_) -
      reinterpret_cast<char*>(&type_)) + sizeof(line_feedrate_));
}

Polygon::~Polygon() {
  // @@protoc_insertion_point(destructor:cura.proto.Polygon)
  SharedDtor();
}

void Polygon::SharedDtor() {
  points_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Polygon::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Polygon::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Polygon& Polygon::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Cura_2eproto::scc_info_Polygon.base);
  return *internal_default_instance();
}


void Polygon::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&line_feedrate_) -
      reinterpret_cast<char*>(&type_)) + sizeof(line_feedrate_));
  _internal_metadata_.Clear();
}

bool Polygon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.Polygon)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .cura.proto.Polygon.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::cura::proto::Polygon_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes points = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float line_width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &line_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float line_thickness = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &line_thickness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float line_feedrate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &line_feedrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.Polygon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.Polygon)
  return false;
#undef DO_
}

void Polygon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .cura.proto.Polygon.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // bytes points = 2;
  if (this->points().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->points(), output);
  }

  // float line_width = 3;
  if (this->line_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->line_width(), output);
  }

  // float line_thickness = 4;
  if (this->line_thickness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->line_thickness(), output);
  }

  // float line_feedrate = 5;
  if (this->line_feedrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->line_feedrate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.Polygon)
}

::google::protobuf::uint8* Polygon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.Polygon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .cura.proto.Polygon.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // bytes points = 2;
  if (this->points().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->points(), target);
  }

  // float line_width = 3;
  if (this->line_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->line_width(), target);
  }

  // float line_thickness = 4;
  if (this->line_thickness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->line_thickness(), target);
  }

  // float line_feedrate = 5;
  if (this->line_feedrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->line_feedrate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.Polygon)
  return target;
}

size_t Polygon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.Polygon)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes points = 2;
  if (this->points().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->points());
  }

  // .cura.proto.Polygon.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // float line_width = 3;
  if (this->line_width() != 0) {
    total_size += 1 + 4;
  }

  // float line_thickness = 4;
  if (this->line_thickness() != 0) {
    total_size += 1 + 4;
  }

  // float line_feedrate = 5;
  if (this->line_feedrate() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Polygon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.Polygon)
  GOOGLE_DCHECK_NE(&from, this);
  const Polygon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Polygon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.Polygon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.Polygon)
    MergeFrom(*source);
  }
}

void Polygon::MergeFrom(const Polygon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.Polygon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.points().size() > 0) {

    points_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.points_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.line_width() != 0) {
    set_line_width(from.line_width());
  }
  if (from.line_thickness() != 0) {
    set_line_thickness(from.line_thickness());
  }
  if (from.line_feedrate() != 0) {
    set_line_feedrate(from.line_feedrate());
  }
}

void Polygon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.Polygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Polygon::CopyFrom(const Polygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.Polygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Polygon::IsInitialized() const {
  return true;
}

void Polygon::Swap(Polygon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Polygon::InternalSwap(Polygon* other) {
  using std::swap;
  points_.Swap(&other->points_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(line_width_, other->line_width_);
  swap(line_thickness_, other->line_thickness_);
  swap(line_feedrate_, other->line_feedrate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Polygon::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LayerOptimized::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LayerOptimized::kIdFieldNumber;
const int LayerOptimized::kHeightFieldNumber;
const int LayerOptimized::kThicknessFieldNumber;
const int LayerOptimized::kPathSegmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LayerOptimized::LayerOptimized()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Cura_2eproto::scc_info_LayerOptimized.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.LayerOptimized)
}
LayerOptimized::LayerOptimized(const LayerOptimized& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      path_segment_(from.path_segment_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&thickness_) -
    reinterpret_cast<char*>(&id_)) + sizeof(thickness_));
  // @@protoc_insertion_point(copy_constructor:cura.proto.LayerOptimized)
}

void LayerOptimized::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&thickness_) -
      reinterpret_cast<char*>(&id_)) + sizeof(thickness_));
}

LayerOptimized::~LayerOptimized() {
  // @@protoc_insertion_point(destructor:cura.proto.LayerOptimized)
  SharedDtor();
}

void LayerOptimized::SharedDtor() {
}

void LayerOptimized::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LayerOptimized::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LayerOptimized& LayerOptimized::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Cura_2eproto::scc_info_LayerOptimized.base);
  return *internal_default_instance();
}


void LayerOptimized::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.LayerOptimized)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_segment_.Clear();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&thickness_) -
      reinterpret_cast<char*>(&id_)) + sizeof(thickness_));
  _internal_metadata_.Clear();
}

bool LayerOptimized::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.LayerOptimized)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float thickness = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &thickness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .cura.proto.PathSegment path_segment = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_path_segment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.LayerOptimized)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.LayerOptimized)
  return false;
#undef DO_
}

void LayerOptimized::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.LayerOptimized)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // float height = 2;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->height(), output);
  }

  // float thickness = 3;
  if (this->thickness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->thickness(), output);
  }

  // repeated .cura.proto.PathSegment path_segment = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_segment_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->path_segment(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.LayerOptimized)
}

::google::protobuf::uint8* LayerOptimized::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.LayerOptimized)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // float height = 2;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->height(), target);
  }

  // float thickness = 3;
  if (this->thickness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->thickness(), target);
  }

  // repeated .cura.proto.PathSegment path_segment = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_segment_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->path_segment(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.LayerOptimized)
  return target;
}

size_t LayerOptimized::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.LayerOptimized)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .cura.proto.PathSegment path_segment = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->path_segment_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->path_segment(static_cast<int>(i)));
    }
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // float height = 2;
  if (this->height() != 0) {
    total_size += 1 + 4;
  }

  // float thickness = 3;
  if (this->thickness() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LayerOptimized::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.LayerOptimized)
  GOOGLE_DCHECK_NE(&from, this);
  const LayerOptimized* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LayerOptimized>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.LayerOptimized)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.LayerOptimized)
    MergeFrom(*source);
  }
}

void LayerOptimized::MergeFrom(const LayerOptimized& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.LayerOptimized)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  path_segment_.MergeFrom(from.path_segment_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.thickness() != 0) {
    set_thickness(from.thickness());
  }
}

void LayerOptimized::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.LayerOptimized)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LayerOptimized::CopyFrom(const LayerOptimized& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.LayerOptimized)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LayerOptimized::IsInitialized() const {
  return true;
}

void LayerOptimized::Swap(LayerOptimized* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LayerOptimized::InternalSwap(LayerOptimized* other) {
  using std::swap;
  CastToBase(&path_segment_)->InternalSwap(CastToBase(&other->path_segment_));
  swap(id_, other->id_);
  swap(height_, other->height_);
  swap(thickness_, other->thickness_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LayerOptimized::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PathSegment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PathSegment::kExtruderFieldNumber;
const int PathSegment::kPointTypeFieldNumber;
const int PathSegment::kPointsFieldNumber;
const int PathSegment::kLineTypeFieldNumber;
const int PathSegment::kLineWidthFieldNumber;
const int PathSegment::kLineThicknessFieldNumber;
const int PathSegment::kLineFeedrateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PathSegment::PathSegment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Cura_2eproto::scc_info_PathSegment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.PathSegment)
}
PathSegment::PathSegment(const PathSegment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  points_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.points().size() > 0) {
    points_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.points_);
  }
  line_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.line_type().size() > 0) {
    line_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line_type_);
  }
  line_width_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.line_width().size() > 0) {
    line_width_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line_width_);
  }
  line_thickness_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.line_thickness().size() > 0) {
    line_thickness_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line_thickness_);
  }
  line_feedrate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.line_feedrate().size() > 0) {
    line_feedrate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line_feedrate_);
  }
  ::memcpy(&extruder_, &from.extruder_,
    static_cast<size_t>(reinterpret_cast<char*>(&point_type_) -
    reinterpret_cast<char*>(&extruder_)) + sizeof(point_type_));
  // @@protoc_insertion_point(copy_constructor:cura.proto.PathSegment)
}

void PathSegment::SharedCtor() {
  points_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_width_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_thickness_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_feedrate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&extruder_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_type_) -
      reinterpret_cast<char*>(&extruder_)) + sizeof(point_type_));
}

PathSegment::~PathSegment() {
  // @@protoc_insertion_point(destructor:cura.proto.PathSegment)
  SharedDtor();
}

void PathSegment::SharedDtor() {
  points_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_width_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_thickness_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_feedrate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PathSegment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PathSegment::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PathSegment& PathSegment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Cura_2eproto::scc_info_PathSegment.base);
  return *internal_default_instance();
}


void PathSegment::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.PathSegment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_width_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_thickness_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_feedrate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&extruder_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_type_) -
      reinterpret_cast<char*>(&extruder_)) + sizeof(point_type_));
  _internal_metadata_.Clear();
}

bool PathSegment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.PathSegment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 extruder = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &extruder_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .cura.proto.PathSegment.PointType point_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_point_type(static_cast< ::cura::proto::PathSegment_PointType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes points = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes line_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_line_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes line_width = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_line_width()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes line_thickness = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_line_thickness()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes line_feedrate = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_line_feedrate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.PathSegment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.PathSegment)
  return false;
#undef DO_
}

void PathSegment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.PathSegment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 extruder = 1;
  if (this->extruder() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->extruder(), output);
  }

  // .cura.proto.PathSegment.PointType point_type = 2;
  if (this->point_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->point_type(), output);
  }

  // bytes points = 3;
  if (this->points().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->points(), output);
  }

  // bytes line_type = 4;
  if (this->line_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->line_type(), output);
  }

  // bytes line_width = 5;
  if (this->line_width().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->line_width(), output);
  }

  // bytes line_thickness = 6;
  if (this->line_thickness().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->line_thickness(), output);
  }

  // bytes line_feedrate = 7;
  if (this->line_feedrate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->line_feedrate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.PathSegment)
}

::google::protobuf::uint8* PathSegment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.PathSegment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 extruder = 1;
  if (this->extruder() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->extruder(), target);
  }

  // .cura.proto.PathSegment.PointType point_type = 2;
  if (this->point_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->point_type(), target);
  }

  // bytes points = 3;
  if (this->points().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->points(), target);
  }

  // bytes line_type = 4;
  if (this->line_type().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->line_type(), target);
  }

  // bytes line_width = 5;
  if (this->line_width().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->line_width(), target);
  }

  // bytes line_thickness = 6;
  if (this->line_thickness().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->line_thickness(), target);
  }

  // bytes line_feedrate = 7;
  if (this->line_feedrate().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->line_feedrate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.PathSegment)
  return target;
}

size_t PathSegment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.PathSegment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes points = 3;
  if (this->points().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->points());
  }

  // bytes line_type = 4;
  if (this->line_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->line_type());
  }

  // bytes line_width = 5;
  if (this->line_width().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->line_width());
  }

  // bytes line_thickness = 6;
  if (this->line_thickness().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->line_thickness());
  }

  // bytes line_feedrate = 7;
  if (this->line_feedrate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->line_feedrate());
  }

  // int32 extruder = 1;
  if (this->extruder() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->extruder());
  }

  // .cura.proto.PathSegment.PointType point_type = 2;
  if (this->point_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->point_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PathSegment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.PathSegment)
  GOOGLE_DCHECK_NE(&from, this);
  const PathSegment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PathSegment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.PathSegment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.PathSegment)
    MergeFrom(*source);
  }
}

void PathSegment::MergeFrom(const PathSegment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.PathSegment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.points().size() > 0) {

    points_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.points_);
  }
  if (from.line_type().size() > 0) {

    line_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line_type_);
  }
  if (from.line_width().size() > 0) {

    line_width_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line_width_);
  }
  if (from.line_thickness().size() > 0) {

    line_thickness_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line_thickness_);
  }
  if (from.line_feedrate().size() > 0) {

    line_feedrate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line_feedrate_);
  }
  if (from.extruder() != 0) {
    set_extruder(from.extruder());
  }
  if (from.point_type() != 0) {
    set_point_type(from.point_type());
  }
}

void PathSegment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.PathSegment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PathSegment::CopyFrom(const PathSegment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.PathSegment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathSegment::IsInitialized() const {
  return true;
}

void PathSegment::Swap(PathSegment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PathSegment::InternalSwap(PathSegment* other) {
  using std::swap;
  points_.Swap(&other->points_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  line_type_.Swap(&other->line_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  line_width_.Swap(&other->line_width_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  line_thickness_.Swap(&other->line_thickness_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  line_feedrate_.Swap(&other->line_feedrate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(extruder_, other->extruder_);
  swap(point_type_, other->point_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PathSegment::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GCodeLayer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GCodeLayer::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GCodeLayer::GCodeLayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Cura_2eproto::scc_info_GCodeLayer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.GCodeLayer)
}
GCodeLayer::GCodeLayer(const GCodeLayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:cura.proto.GCodeLayer)
}

void GCodeLayer::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GCodeLayer::~GCodeLayer() {
  // @@protoc_insertion_point(destructor:cura.proto.GCodeLayer)
  SharedDtor();
}

void GCodeLayer::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GCodeLayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GCodeLayer::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GCodeLayer& GCodeLayer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Cura_2eproto::scc_info_GCodeLayer.base);
  return *internal_default_instance();
}


void GCodeLayer::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.GCodeLayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GCodeLayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.GCodeLayer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.GCodeLayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.GCodeLayer)
  return false;
#undef DO_
}

void GCodeLayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.GCodeLayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.GCodeLayer)
}

::google::protobuf::uint8* GCodeLayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.GCodeLayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.GCodeLayer)
  return target;
}

size_t GCodeLayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.GCodeLayer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GCodeLayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.GCodeLayer)
  GOOGLE_DCHECK_NE(&from, this);
  const GCodeLayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GCodeLayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.GCodeLayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.GCodeLayer)
    MergeFrom(*source);
  }
}

void GCodeLayer::MergeFrom(const GCodeLayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.GCodeLayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void GCodeLayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.GCodeLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCodeLayer::CopyFrom(const GCodeLayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.GCodeLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCodeLayer::IsInitialized() const {
  return true;
}

void GCodeLayer::Swap(GCodeLayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GCodeLayer::InternalSwap(GCodeLayer* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GCodeLayer::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PrintTimeMaterialEstimates::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrintTimeMaterialEstimates::kTimeNoneFieldNumber;
const int PrintTimeMaterialEstimates::kTimeInset0FieldNumber;
const int PrintTimeMaterialEstimates::kTimeInsetXFieldNumber;
const int PrintTimeMaterialEstimates::kTimeSkinFieldNumber;
const int PrintTimeMaterialEstimates::kTimeSupportFieldNumber;
const int PrintTimeMaterialEstimates::kTimeSkirtFieldNumber;
const int PrintTimeMaterialEstimates::kTimeInfillFieldNumber;
const int PrintTimeMaterialEstimates::kTimeSupportInfillFieldNumber;
const int PrintTimeMaterialEstimates::kTimeTravelFieldNumber;
const int PrintTimeMaterialEstimates::kTimeRetractFieldNumber;
const int PrintTimeMaterialEstimates::kTimeSupportInterfaceFieldNumber;
const int PrintTimeMaterialEstimates::kMaterialEstimatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrintTimeMaterialEstimates::PrintTimeMaterialEstimates()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Cura_2eproto::scc_info_PrintTimeMaterialEstimates.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.PrintTimeMaterialEstimates)
}
PrintTimeMaterialEstimates::PrintTimeMaterialEstimates(const PrintTimeMaterialEstimates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      materialestimates_(from.materialestimates_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_none_, &from.time_none_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_support_interface_) -
    reinterpret_cast<char*>(&time_none_)) + sizeof(time_support_interface_));
  // @@protoc_insertion_point(copy_constructor:cura.proto.PrintTimeMaterialEstimates)
}

void PrintTimeMaterialEstimates::SharedCtor() {
  ::memset(&time_none_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_support_interface_) -
      reinterpret_cast<char*>(&time_none_)) + sizeof(time_support_interface_));
}

PrintTimeMaterialEstimates::~PrintTimeMaterialEstimates() {
  // @@protoc_insertion_point(destructor:cura.proto.PrintTimeMaterialEstimates)
  SharedDtor();
}

void PrintTimeMaterialEstimates::SharedDtor() {
}

void PrintTimeMaterialEstimates::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PrintTimeMaterialEstimates::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrintTimeMaterialEstimates& PrintTimeMaterialEstimates::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Cura_2eproto::scc_info_PrintTimeMaterialEstimates.base);
  return *internal_default_instance();
}


void PrintTimeMaterialEstimates::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.PrintTimeMaterialEstimates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  materialestimates_.Clear();
  ::memset(&time_none_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_support_interface_) -
      reinterpret_cast<char*>(&time_none_)) + sizeof(time_support_interface_));
  _internal_metadata_.Clear();
}

bool PrintTimeMaterialEstimates::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.PrintTimeMaterialEstimates)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float time_none = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_none_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float time_inset_0 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_inset_0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float time_inset_x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_inset_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float time_skin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_skin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float time_support = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_support_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float time_skirt = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_skirt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float time_infill = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_infill_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float time_support_infill = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_support_infill_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float time_travel = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_travel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float time_retract = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_retract_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float time_support_interface = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_support_interface_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .cura.proto.MaterialEstimates materialEstimates = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_materialestimates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.PrintTimeMaterialEstimates)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.PrintTimeMaterialEstimates)
  return false;
#undef DO_
}

void PrintTimeMaterialEstimates::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.PrintTimeMaterialEstimates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float time_none = 1;
  if (this->time_none() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->time_none(), output);
  }

  // float time_inset_0 = 2;
  if (this->time_inset_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->time_inset_0(), output);
  }

  // float time_inset_x = 3;
  if (this->time_inset_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->time_inset_x(), output);
  }

  // float time_skin = 4;
  if (this->time_skin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->time_skin(), output);
  }

  // float time_support = 5;
  if (this->time_support() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->time_support(), output);
  }

  // float time_skirt = 6;
  if (this->time_skirt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->time_skirt(), output);
  }

  // float time_infill = 7;
  if (this->time_infill() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->time_infill(), output);
  }

  // float time_support_infill = 8;
  if (this->time_support_infill() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->time_support_infill(), output);
  }

  // float time_travel = 9;
  if (this->time_travel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->time_travel(), output);
  }

  // float time_retract = 10;
  if (this->time_retract() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->time_retract(), output);
  }

  // float time_support_interface = 11;
  if (this->time_support_interface() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->time_support_interface(), output);
  }

  // repeated .cura.proto.MaterialEstimates materialEstimates = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->materialestimates_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->materialestimates(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.PrintTimeMaterialEstimates)
}

::google::protobuf::uint8* PrintTimeMaterialEstimates::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.PrintTimeMaterialEstimates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float time_none = 1;
  if (this->time_none() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->time_none(), target);
  }

  // float time_inset_0 = 2;
  if (this->time_inset_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->time_inset_0(), target);
  }

  // float time_inset_x = 3;
  if (this->time_inset_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->time_inset_x(), target);
  }

  // float time_skin = 4;
  if (this->time_skin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->time_skin(), target);
  }

  // float time_support = 5;
  if (this->time_support() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->time_support(), target);
  }

  // float time_skirt = 6;
  if (this->time_skirt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->time_skirt(), target);
  }

  // float time_infill = 7;
  if (this->time_infill() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->time_infill(), target);
  }

  // float time_support_infill = 8;
  if (this->time_support_infill() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->time_support_infill(), target);
  }

  // float time_travel = 9;
  if (this->time_travel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->time_travel(), target);
  }

  // float time_retract = 10;
  if (this->time_retract() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->time_retract(), target);
  }

  // float time_support_interface = 11;
  if (this->time_support_interface() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->time_support_interface(), target);
  }

  // repeated .cura.proto.MaterialEstimates materialEstimates = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->materialestimates_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->materialestimates(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.PrintTimeMaterialEstimates)
  return target;
}

size_t PrintTimeMaterialEstimates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.PrintTimeMaterialEstimates)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .cura.proto.MaterialEstimates materialEstimates = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->materialestimates_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->materialestimates(static_cast<int>(i)));
    }
  }

  // float time_none = 1;
  if (this->time_none() != 0) {
    total_size += 1 + 4;
  }

  // float time_inset_0 = 2;
  if (this->time_inset_0() != 0) {
    total_size += 1 + 4;
  }

  // float time_inset_x = 3;
  if (this->time_inset_x() != 0) {
    total_size += 1 + 4;
  }

  // float time_skin = 4;
  if (this->time_skin() != 0) {
    total_size += 1 + 4;
  }

  // float time_support = 5;
  if (this->time_support() != 0) {
    total_size += 1 + 4;
  }

  // float time_skirt = 6;
  if (this->time_skirt() != 0) {
    total_size += 1 + 4;
  }

  // float time_infill = 7;
  if (this->time_infill() != 0) {
    total_size += 1 + 4;
  }

  // float time_support_infill = 8;
  if (this->time_support_infill() != 0) {
    total_size += 1 + 4;
  }

  // float time_travel = 9;
  if (this->time_travel() != 0) {
    total_size += 1 + 4;
  }

  // float time_retract = 10;
  if (this->time_retract() != 0) {
    total_size += 1 + 4;
  }

  // float time_support_interface = 11;
  if (this->time_support_interface() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrintTimeMaterialEstimates::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.PrintTimeMaterialEstimates)
  GOOGLE_DCHECK_NE(&from, this);
  const PrintTimeMaterialEstimates* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrintTimeMaterialEstimates>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.PrintTimeMaterialEstimates)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.PrintTimeMaterialEstimates)
    MergeFrom(*source);
  }
}

void PrintTimeMaterialEstimates::MergeFrom(const PrintTimeMaterialEstimates& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.PrintTimeMaterialEstimates)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  materialestimates_.MergeFrom(from.materialestimates_);
  if (from.time_none() != 0) {
    set_time_none(from.time_none());
  }
  if (from.time_inset_0() != 0) {
    set_time_inset_0(from.time_inset_0());
  }
  if (from.time_inset_x() != 0) {
    set_time_inset_x(from.time_inset_x());
  }
  if (from.time_skin() != 0) {
    set_time_skin(from.time_skin());
  }
  if (from.time_support() != 0) {
    set_time_support(from.time_support());
  }
  if (from.time_skirt() != 0) {
    set_time_skirt(from.time_skirt());
  }
  if (from.time_infill() != 0) {
    set_time_infill(from.time_infill());
  }
  if (from.time_support_infill() != 0) {
    set_time_support_infill(from.time_support_infill());
  }
  if (from.time_travel() != 0) {
    set_time_travel(from.time_travel());
  }
  if (from.time_retract() != 0) {
    set_time_retract(from.time_retract());
  }
  if (from.time_support_interface() != 0) {
    set_time_support_interface(from.time_support_interface());
  }
}

void PrintTimeMaterialEstimates::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.PrintTimeMaterialEstimates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrintTimeMaterialEstimates::CopyFrom(const PrintTimeMaterialEstimates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.PrintTimeMaterialEstimates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrintTimeMaterialEstimates::IsInitialized() const {
  return true;
}

void PrintTimeMaterialEstimates::Swap(PrintTimeMaterialEstimates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrintTimeMaterialEstimates::InternalSwap(PrintTimeMaterialEstimates* other) {
  using std::swap;
  CastToBase(&materialestimates_)->InternalSwap(CastToBase(&other->materialestimates_));
  swap(time_none_, other->time_none_);
  swap(time_inset_0_, other->time_inset_0_);
  swap(time_inset_x_, other->time_inset_x_);
  swap(time_skin_, other->time_skin_);
  swap(time_support_, other->time_support_);
  swap(time_skirt_, other->time_skirt_);
  swap(time_infill_, other->time_infill_);
  swap(time_support_infill_, other->time_support_infill_);
  swap(time_travel_, other->time_travel_);
  swap(time_retract_, other->time_retract_);
  swap(time_support_interface_, other->time_support_interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrintTimeMaterialEstimates::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MaterialEstimates::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MaterialEstimates::kIdFieldNumber;
const int MaterialEstimates::kMaterialAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaterialEstimates::MaterialEstimates()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Cura_2eproto::scc_info_MaterialEstimates.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.MaterialEstimates)
}
MaterialEstimates::MaterialEstimates(const MaterialEstimates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&material_amount_) -
    reinterpret_cast<char*>(&id_)) + sizeof(material_amount_));
  // @@protoc_insertion_point(copy_constructor:cura.proto.MaterialEstimates)
}

void MaterialEstimates::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&material_amount_) -
      reinterpret_cast<char*>(&id_)) + sizeof(material_amount_));
}

MaterialEstimates::~MaterialEstimates() {
  // @@protoc_insertion_point(destructor:cura.proto.MaterialEstimates)
  SharedDtor();
}

void MaterialEstimates::SharedDtor() {
}

void MaterialEstimates::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MaterialEstimates::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MaterialEstimates& MaterialEstimates::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Cura_2eproto::scc_info_MaterialEstimates.base);
  return *internal_default_instance();
}


void MaterialEstimates::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.MaterialEstimates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&material_amount_) -
      reinterpret_cast<char*>(&id_)) + sizeof(material_amount_));
  _internal_metadata_.Clear();
}

bool MaterialEstimates::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.MaterialEstimates)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float material_amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &material_amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.MaterialEstimates)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.MaterialEstimates)
  return false;
#undef DO_
}

void MaterialEstimates::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.MaterialEstimates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // float material_amount = 2;
  if (this->material_amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->material_amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.MaterialEstimates)
}

::google::protobuf::uint8* MaterialEstimates::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.MaterialEstimates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // float material_amount = 2;
  if (this->material_amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->material_amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.MaterialEstimates)
  return target;
}

size_t MaterialEstimates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.MaterialEstimates)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // float material_amount = 2;
  if (this->material_amount() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MaterialEstimates::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.MaterialEstimates)
  GOOGLE_DCHECK_NE(&from, this);
  const MaterialEstimates* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MaterialEstimates>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.MaterialEstimates)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.MaterialEstimates)
    MergeFrom(*source);
  }
}

void MaterialEstimates::MergeFrom(const MaterialEstimates& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.MaterialEstimates)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.material_amount() != 0) {
    set_material_amount(from.material_amount());
  }
}

void MaterialEstimates::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.MaterialEstimates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaterialEstimates::CopyFrom(const MaterialEstimates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.MaterialEstimates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaterialEstimates::IsInitialized() const {
  return true;
}

void MaterialEstimates::Swap(MaterialEstimates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaterialEstimates::InternalSwap(MaterialEstimates* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(material_amount_, other->material_amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MaterialEstimates::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SettingList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SettingList::kSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SettingList::SettingList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Cura_2eproto::scc_info_SettingList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.SettingList)
}
SettingList::SettingList(const SettingList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      settings_(from.settings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cura.proto.SettingList)
}

void SettingList::SharedCtor() {
}

SettingList::~SettingList() {
  // @@protoc_insertion_point(destructor:cura.proto.SettingList)
  SharedDtor();
}

void SettingList::SharedDtor() {
}

void SettingList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SettingList::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SettingList& SettingList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Cura_2eproto::scc_info_SettingList.base);
  return *internal_default_instance();
}


void SettingList::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.SettingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  settings_.Clear();
  _internal_metadata_.Clear();
}

bool SettingList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.SettingList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .cura.proto.Setting settings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.SettingList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.SettingList)
  return false;
#undef DO_
}

void SettingList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.SettingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cura.proto.Setting settings = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->settings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->settings(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.SettingList)
}

::google::protobuf::uint8* SettingList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.SettingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cura.proto.Setting settings = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->settings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->settings(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.SettingList)
  return target;
}

size_t SettingList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.SettingList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .cura.proto.Setting settings = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->settings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->settings(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SettingList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.SettingList)
  GOOGLE_DCHECK_NE(&from, this);
  const SettingList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SettingList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.SettingList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.SettingList)
    MergeFrom(*source);
  }
}

void SettingList::MergeFrom(const SettingList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.SettingList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  settings_.MergeFrom(from.settings_);
}

void SettingList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.SettingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SettingList::CopyFrom(const SettingList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.SettingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SettingList::IsInitialized() const {
  return true;
}

void SettingList::Swap(SettingList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SettingList::InternalSwap(SettingList* other) {
  using std::swap;
  CastToBase(&settings_)->InternalSwap(CastToBase(&other->settings_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SettingList::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Setting::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Setting::kNameFieldNumber;
const int Setting::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Setting::Setting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Cura_2eproto::scc_info_Setting.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.Setting)
}
Setting::Setting(const Setting& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:cura.proto.Setting)
}

void Setting::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Setting::~Setting() {
  // @@protoc_insertion_point(destructor:cura.proto.Setting)
  SharedDtor();
}

void Setting::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Setting::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Setting::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Setting& Setting::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Cura_2eproto::scc_info_Setting.base);
  return *internal_default_instance();
}


void Setting::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.Setting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Setting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.Setting)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cura.proto.Setting.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.Setting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.Setting)
  return false;
#undef DO_
}

void Setting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.Setting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cura.proto.Setting.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.Setting)
}

::google::protobuf::uint8* Setting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.Setting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cura.proto.Setting.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.Setting)
  return target;
}

size_t Setting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.Setting)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Setting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.Setting)
  GOOGLE_DCHECK_NE(&from, this);
  const Setting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Setting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.Setting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.Setting)
    MergeFrom(*source);
  }
}

void Setting::MergeFrom(const Setting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.Setting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Setting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.Setting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Setting::CopyFrom(const Setting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.Setting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Setting::IsInitialized() const {
  return true;
}

void Setting::Swap(Setting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Setting::InternalSwap(Setting* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Setting::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SettingExtruder::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SettingExtruder::kNameFieldNumber;
const int SettingExtruder::kExtruderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SettingExtruder::SettingExtruder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Cura_2eproto::scc_info_SettingExtruder.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.SettingExtruder)
}
SettingExtruder::SettingExtruder(const SettingExtruder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  extruder_ = from.extruder_;
  // @@protoc_insertion_point(copy_constructor:cura.proto.SettingExtruder)
}

void SettingExtruder::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extruder_ = 0;
}

SettingExtruder::~SettingExtruder() {
  // @@protoc_insertion_point(destructor:cura.proto.SettingExtruder)
  SharedDtor();
}

void SettingExtruder::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SettingExtruder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SettingExtruder::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SettingExtruder& SettingExtruder::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Cura_2eproto::scc_info_SettingExtruder.base);
  return *internal_default_instance();
}


void SettingExtruder::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.SettingExtruder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extruder_ = 0;
  _internal_metadata_.Clear();
}

bool SettingExtruder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.SettingExtruder)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cura.proto.SettingExtruder.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 extruder = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &extruder_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.SettingExtruder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.SettingExtruder)
  return false;
#undef DO_
}

void SettingExtruder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.SettingExtruder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cura.proto.SettingExtruder.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 extruder = 2;
  if (this->extruder() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->extruder(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.SettingExtruder)
}

::google::protobuf::uint8* SettingExtruder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.SettingExtruder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cura.proto.SettingExtruder.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 extruder = 2;
  if (this->extruder() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->extruder(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.SettingExtruder)
  return target;
}

size_t SettingExtruder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.SettingExtruder)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 extruder = 2;
  if (this->extruder() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->extruder());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SettingExtruder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.SettingExtruder)
  GOOGLE_DCHECK_NE(&from, this);
  const SettingExtruder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SettingExtruder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.SettingExtruder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.SettingExtruder)
    MergeFrom(*source);
  }
}

void SettingExtruder::MergeFrom(const SettingExtruder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.SettingExtruder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.extruder() != 0) {
    set_extruder(from.extruder());
  }
}

void SettingExtruder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.SettingExtruder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SettingExtruder::CopyFrom(const SettingExtruder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.SettingExtruder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SettingExtruder::IsInitialized() const {
  return true;
}

void SettingExtruder::Swap(SettingExtruder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SettingExtruder::InternalSwap(SettingExtruder* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(extruder_, other->extruder_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SettingExtruder::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GCodePrefix::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GCodePrefix::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GCodePrefix::GCodePrefix()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Cura_2eproto::scc_info_GCodePrefix.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.GCodePrefix)
}
GCodePrefix::GCodePrefix(const GCodePrefix& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:cura.proto.GCodePrefix)
}

void GCodePrefix::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GCodePrefix::~GCodePrefix() {
  // @@protoc_insertion_point(destructor:cura.proto.GCodePrefix)
  SharedDtor();
}

void GCodePrefix::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GCodePrefix::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GCodePrefix::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GCodePrefix& GCodePrefix::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Cura_2eproto::scc_info_GCodePrefix.base);
  return *internal_default_instance();
}


void GCodePrefix::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.GCodePrefix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GCodePrefix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.GCodePrefix)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.GCodePrefix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.GCodePrefix)
  return false;
#undef DO_
}

void GCodePrefix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.GCodePrefix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.GCodePrefix)
}

::google::protobuf::uint8* GCodePrefix::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.GCodePrefix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.GCodePrefix)
  return target;
}

size_t GCodePrefix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.GCodePrefix)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GCodePrefix::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.GCodePrefix)
  GOOGLE_DCHECK_NE(&from, this);
  const GCodePrefix* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GCodePrefix>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.GCodePrefix)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.GCodePrefix)
    MergeFrom(*source);
  }
}

void GCodePrefix::MergeFrom(const GCodePrefix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.GCodePrefix)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void GCodePrefix::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.GCodePrefix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCodePrefix::CopyFrom(const GCodePrefix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.GCodePrefix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCodePrefix::IsInitialized() const {
  return true;
}

void GCodePrefix::Swap(GCodePrefix* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GCodePrefix::InternalSwap(GCodePrefix* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GCodePrefix::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SlicingFinished::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SlicingFinished::SlicingFinished()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Cura_2eproto::scc_info_SlicingFinished.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cura.proto.SlicingFinished)
}
SlicingFinished::SlicingFinished(const SlicingFinished& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:cura.proto.SlicingFinished)
}

void SlicingFinished::SharedCtor() {
}

SlicingFinished::~SlicingFinished() {
  // @@protoc_insertion_point(destructor:cura.proto.SlicingFinished)
  SharedDtor();
}

void SlicingFinished::SharedDtor() {
}

void SlicingFinished::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SlicingFinished::descriptor() {
  ::protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SlicingFinished& SlicingFinished::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Cura_2eproto::scc_info_SlicingFinished.base);
  return *internal_default_instance();
}


void SlicingFinished::Clear() {
// @@protoc_insertion_point(message_clear_start:cura.proto.SlicingFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SlicingFinished::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cura.proto.SlicingFinished)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:cura.proto.SlicingFinished)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cura.proto.SlicingFinished)
  return false;
#undef DO_
}

void SlicingFinished::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cura.proto.SlicingFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cura.proto.SlicingFinished)
}

::google::protobuf::uint8* SlicingFinished::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cura.proto.SlicingFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cura.proto.SlicingFinished)
  return target;
}

size_t SlicingFinished::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cura.proto.SlicingFinished)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SlicingFinished::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cura.proto.SlicingFinished)
  GOOGLE_DCHECK_NE(&from, this);
  const SlicingFinished* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SlicingFinished>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cura.proto.SlicingFinished)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cura.proto.SlicingFinished)
    MergeFrom(*source);
  }
}

void SlicingFinished::MergeFrom(const SlicingFinished& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cura.proto.SlicingFinished)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SlicingFinished::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cura.proto.SlicingFinished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SlicingFinished::CopyFrom(const SlicingFinished& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cura.proto.SlicingFinished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SlicingFinished::IsInitialized() const {
  return true;
}

void SlicingFinished::Swap(SlicingFinished* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SlicingFinished::InternalSwap(SlicingFinished* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SlicingFinished::GetMetadata() const {
  protobuf_Cura_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Cura_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace cura
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cura::proto::ObjectList* Arena::CreateMaybeMessage< ::cura::proto::ObjectList >(Arena* arena) {
  return Arena::CreateInternal< ::cura::proto::ObjectList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cura::proto::Slice* Arena::CreateMaybeMessage< ::cura::proto::Slice >(Arena* arena) {
  return Arena::CreateInternal< ::cura::proto::Slice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cura::proto::Extruder* Arena::CreateMaybeMessage< ::cura::proto::Extruder >(Arena* arena) {
  return Arena::CreateInternal< ::cura::proto::Extruder >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cura::proto::Object* Arena::CreateMaybeMessage< ::cura::proto::Object >(Arena* arena) {
  return Arena::CreateInternal< ::cura::proto::Object >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cura::proto::Progress* Arena::CreateMaybeMessage< ::cura::proto::Progress >(Arena* arena) {
  return Arena::CreateInternal< ::cura::proto::Progress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cura::proto::Layer* Arena::CreateMaybeMessage< ::cura::proto::Layer >(Arena* arena) {
  return Arena::CreateInternal< ::cura::proto::Layer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cura::proto::Polygon* Arena::CreateMaybeMessage< ::cura::proto::Polygon >(Arena* arena) {
  return Arena::CreateInternal< ::cura::proto::Polygon >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cura::proto::LayerOptimized* Arena::CreateMaybeMessage< ::cura::proto::LayerOptimized >(Arena* arena) {
  return Arena::CreateInternal< ::cura::proto::LayerOptimized >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cura::proto::PathSegment* Arena::CreateMaybeMessage< ::cura::proto::PathSegment >(Arena* arena) {
  return Arena::CreateInternal< ::cura::proto::PathSegment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cura::proto::GCodeLayer* Arena::CreateMaybeMessage< ::cura::proto::GCodeLayer >(Arena* arena) {
  return Arena::CreateInternal< ::cura::proto::GCodeLayer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cura::proto::PrintTimeMaterialEstimates* Arena::CreateMaybeMessage< ::cura::proto::PrintTimeMaterialEstimates >(Arena* arena) {
  return Arena::CreateInternal< ::cura::proto::PrintTimeMaterialEstimates >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cura::proto::MaterialEstimates* Arena::CreateMaybeMessage< ::cura::proto::MaterialEstimates >(Arena* arena) {
  return Arena::CreateInternal< ::cura::proto::MaterialEstimates >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cura::proto::SettingList* Arena::CreateMaybeMessage< ::cura::proto::SettingList >(Arena* arena) {
  return Arena::CreateInternal< ::cura::proto::SettingList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cura::proto::Setting* Arena::CreateMaybeMessage< ::cura::proto::Setting >(Arena* arena) {
  return Arena::CreateInternal< ::cura::proto::Setting >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cura::proto::SettingExtruder* Arena::CreateMaybeMessage< ::cura::proto::SettingExtruder >(Arena* arena) {
  return Arena::CreateInternal< ::cura::proto::SettingExtruder >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cura::proto::GCodePrefix* Arena::CreateMaybeMessage< ::cura::proto::GCodePrefix >(Arena* arena) {
  return Arena::CreateInternal< ::cura::proto::GCodePrefix >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cura::proto::SlicingFinished* Arena::CreateMaybeMessage< ::cura::proto::SlicingFinished >(Arena* arena) {
  return Arena::CreateInternal< ::cura::proto::SlicingFinished >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
